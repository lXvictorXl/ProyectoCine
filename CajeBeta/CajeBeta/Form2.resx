<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>